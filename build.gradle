buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.3'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2-rc1'
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.2.0'
        classpath 'gradle.plugin.de.qaware.cloud.deployer:deployer:0.9.1'
    }
}

apply plugin: 'org.sonarqube'


allprojects {
    apply plugin: 'com.bmuschko.docker-remote-api'

    docker {

        url = System.env.DOCKER_HOST?.replace('tcp', 'https') ?: 'https://192.168.99.100:2376'
        if (url.contains("https://")) {
            certPath = file("${System.getProperty('user.home')}/.docker/machine/machines/default")
        }

        registryCredentials {
            url = "toplac-docker-playground.bintray.io"
            username = System.env.DOCKER_REGISTRY_CREDENTIALS_USR ?: 'qaware-oss'
            password = System.env.DOCKER_REGISTRY_CREDENTIALS_PSW ?: ''
            email = System.env.DOCKER_REGISTRY_EMAIL ?: 'qaware-oss@qaware.de'
        }
    }

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'https://dl.bintray.com/palantir/releases'}
        jcenter()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'spring-boot'
    apply plugin: "com.github.hierynomus.license"
    apply plugin: 'org.unbroken-dome.test-sets'
    apply plugin: 'de.qaware.cloud.deployer'

    license {
        skipExistingHeaders = true
        header rootProject.file('LICENSE')
        includes(["**/*.java"])
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }

    group = 'de.qaware.cloud.nativ.zwitscher'
    version = '1.2.0'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.RELEASE"
        }
    }

    testSets {
        integrationTest
    }

    dependencies {
        compile 'org.springframework.boot:spring-boot-starter-undertow'

        compile 'org.springframework.boot:spring-boot-starter-actuator'
        compile 'org.springframework.boot:spring-boot-starter-hateoas'

        compile 'org.projectlombok:lombok:1.16.6'

        testCompile 'org.springframework.boot:spring-boot-starter-test'
        testCompile 'junit:junit:4.12'
        testCompile 'org.hamcrest:hamcrest-library:1.3'
        integrationTestCompile 'com.palantir.docker.compose:docker-compose-rule:0.26.0'
    }

    springBoot {
        executable = true
    }

    test {
        reports {
            junitXml.enabled = true
            html.enabled = true
        }
    }

    task buildDockerImage(type: DockerBuildImage) {
        inputDir = projectDir
        noCache = false
        remove = true
        tag = "$project.name:$version"
    }

    task removeDockerImage(type: DockerRemoveImage) {
        imageId = "$project.name:$version"
    }

    task pushDockerImageWithVersion(type: DockerPushImage) {

        imageName = "toplac-docker-playground.bintray.io/zwitscher/$project.name:$version"
    }

    task pushLatestDockerImage(type: DockerPushImage) {

        imageName = "toplac-docker-playground.bintray.io/zwitscher/$project.name:latest"
    }

    task pushDockerImages() {
        dependsOn 'pushDockerImageWithVersion'
        dependsOn 'pushLatestDockerImage'
    }

    task tagDockerImageWithVersion(type: DockerTagImage) {
        imageId = "$project.name:$version"
        repository = "toplac-docker-playground.bintray.io/zwitscher".concat("/$project.name")
        tag = "$version"
    }

    task tagDockerImageWithLatest(type: DockerTagImage) {
        imageId = "$project.name:$version"
        repository = "toplac-docker-playground.bintray.io/zwitscher".concat("/$project.name")
        tag = 'latest'
    }

    task tagDockerImages {
        dependsOn 'tagDockerImageWithLatest'
        dependsOn 'tagDockerImageWithVersion'
    }

    deployer {
        marathon {
            id = "marathon-$project.name"
            baseUrl = System.env.CLOUD_DEPLOYMENT_BASE_URL
            strategy = System.env.CLOUD_DEPLOYMENT_STRATEGY
            auth {
                token = defaultToken(file(System.env.TOKEN_FILE?: "~/.dcos/dcos.toml"))
            }
            files = [file("marathon-$project.name" + ".json")]
        }
    }

}

import com.bmuschko.gradle.docker.tasks.DockerInfo
import com.bmuschko.gradle.docker.tasks.DockerVersion
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.DockerRemoveImage
import com.bmuschko.gradle.docker.tasks.image.DockerTagImage

task dockerInfo(type: DockerInfo) {}
task dockerVersion(type: DockerVersion) {}
